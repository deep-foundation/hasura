version: '3.6'
services:
  postgres:
    image: deepf/pg12-plv8:deeplinks-70-menzorg
    networks:
      - network
    ports:
    - "5432:5432"
    restart: always
    command: postgres -c max_connections=200 -c log_error_verbosity=verbose -c client_min_messages=DEBUG5 -c log_min_messages=DEBUG5 -c log_min_error_statement=DEBUG5 -c log_duration=true
    volumes:
    - db_data:/var/lib/postgresql/data
    - type: bind
      source: ./plv8.sql
      target: /docker-entrypoint-initdb.d/plv8.sql
    - type: bind
      source: ./storage.sql
      target: /docker-entrypoint-initdb.d/storage.sql
    environment:
      - 'POSTGRES_USER=postgres'
      - 'POSTGRES_PASSWORD=postgrespassword'
      - 'PGGSSENCMODE=disable'
      - 'PGSSLMODE=disable'
      - 'PGREQUIRESSL=0'
  graphql-engine:
    image: hasura/graphql-engine:v2.3.1
    networks:
      - network
    ports:
    - "8080:8080"
    extra_hosts: ['host.docker.internal:host-gateway']
    links:
    - "postgres:postgres"
    depends_on:
    - "postgres"
    restart: always
    environment:
      - 'HASURA_GRAPHQL_DATABASE_URL=postgres://postgres:postgrespassword@postgres:5432/postgres'
      - 'HASURA_GRAPHQL_ENABLE_CONSOLE=true'
      - 'HASURA_GRAPHQL_DEV_MODE=true'
      - 'HASURA_GRAPHQL_LOG_LEVEL=debug'
      - 'HASURA_GRAPHQL_ENABLED_LOG_TYPES=startup, http-log, webhook-log, websocket-log, query-log'
      - 'HASURA_GRAPHQL_ADMIN_SECRET=myadminsecretkey'
      - 'HASURA_GRAPHQL_JWT_SECRET={"type":"HS256","key":"3EK6FD+o0+c7tzBNVfjpMkNDi2yARAAKzQlk8O2IKoxQu4nF7EdAh8s3TwpHwrdWT6R"}'
      - 'HASURA_GRAPHQL_ENABLE_REMOTE_SCHEMA_PERMISSIONS=true'
      - 'HASURA_GRAPHQL_UNAUTHORIZED_ROLE=undefined'
  storage:
    container_name: hasura-storage
    image: nhost/hasura-storage:0.2.3
    depends_on:
      - graphql-engine
    restart: unless-stopped
    ports:
      - '8000:8000'
    environment:
      DEBUG: "true"
      HASURA_METADATA: 1
      HASURA_ENDPOINT: http://host.docker.internal:8080/v1
      HASURA_GRAPHQL_ADMIN_SECRET: myadminsecretkey
      S3_ENDPOINT: http://host.docker.internal:9000
      S3_ACCESS_KEY: minioaccesskey
      S3_SECRET_KEY: miniosecretkey
      S3_BUCKET: "default"
      S3_ROOT_FOLDER: "default"
      POSTGRES_MIGRATIONS: 1
      POSTGRES_MIGRATIONS_SOURCE: postgres://postgres:postgrespassword@host.docker.internal:5432/postgres?sslmode=disable
    command: serve
  minio:
    image: minio/minio
    restart: always
    volumes:
      - 'minio_data:/export'
      - 'minio_config:/root/.minio'
    ports:
      - '9000:9000'
      - '32765:32765'
    environment:
      - MINIO_ROOT_USER=minioroot
      - MINIO_ROOT_PASSWORD=minioroot
      - 'MINIO_ACCESS_KEY=minioaccesskey'
      - 'MINIO_SECRET_KEY=miniosecretkey'
      - 'S3_BUCKET=hasura_files'
    entrypoint: sh
    command: '-c ''mkdir -p /export/$${S3_bucket} && /opt/bin/minio server --address 0.0.0.0:9000 --console-address 0.0.0.0:32765 /export'''
volumes:
  db_data:
  storage_rules:
  minio_data:
  minio_config:
networks:
  network:
    driver: bridge
